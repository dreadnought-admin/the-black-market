{"ast":null,"code":"var _jsxFileName = \"/home/dreadnought/Development/code/phase-5/black-market/client/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = _ref => {\n  _s();\n  let {\n    updateUser\n  } = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(r => {\n      if (r.ok) {\n        r.json().then(user => updateUser(user));\n        navigate(\"/\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This is the temporary Login Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        autoComplete: \"off\",\n        placeholder: \"Enter your username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"And of course, your password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"pasword\",\n        id: \"pasword\",\n        autoComplete: \"current-password\",\n        value: password,\n        placeholder: \"Enter your password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"But if not, then sign up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"sign up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Login","updateUser","username","setUsername","password","setPassword","navigate","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","ok","json","user","target","value"],"sources":["/home/dreadnought/Development/code/phase-5/black-market/client/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\n\nconst Login = ({ updateUser }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ username, password }),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((user) => \n          updateUser(user));\n          navigate(\"/\")\n        }\n      });\n    }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1>This is the temporary Login Text</h1>\n        <input\n          className=\"input\"\n          type=\"text\"\n          id=\"username\"\n          name=\"username\"\n          autoComplete='off'\n          placeholder=\"Enter your username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          />\n          <h1>And of course, your password</h1>\n          <input\n          className=\"input\"\n          type=\"pasword\"\n          id=\"pasword\"\n          autoComplete=\"current-password\"\n          value={password}\n          placeholder=\"Enter your password\"\n          onChange={(e) => setPassword(e.target.value)}\n          />\n      </form>\n      <div>\n        <h1>But if not, then sign up!</h1>\n        <Link to=\"/signup\">sign up!</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAA;AAEpD,MAAMC,KAAK,GAAG,QAAoB;EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAG5C,MAAMS,QAAQ,GAAGP,WAAW,EAAE;EAE9B,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClBC,KAAK,CAAC,QAAQ,EAAE;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb,QAAQ;QAAEE;MAAS,CAAC;IAC7C,CAAC,CAAC,CAACY,IAAI,CAAEC,CAAC,IAAK;MACb,IAAIA,CAAC,CAACC,EAAE,EAAE;QACRD,CAAC,CAACE,IAAI,EAAE,CAACH,IAAI,CAAEI,IAAI,IACjBnB,UAAU,CAACmB,IAAI,CAAC,CAAC;QACjBd,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,CAAC;EACJ,CAAC;EAEH,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAEC,YAAa;MAAA,wBAC3B;QAAA,UAAI;MAAgC;QAAA;QAAA;QAAA;MAAA,QAAK,eACzC;QACE,SAAS,EAAC,OAAO;QACjB,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,UAAU;QACb,IAAI,EAAC,UAAU;QACf,YAAY,EAAC,KAAK;QAClB,WAAW,EAAC,qBAAqB;QACjC,KAAK,EAAEL,QAAS;QAChB,QAAQ,EAAGM,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACa,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC3C,eACF;QAAA,UAAI;MAA4B;QAAA;QAAA;QAAA;MAAA,QAAK,eACrC;QACA,SAAS,EAAC,OAAO;QACjB,IAAI,EAAC,SAAS;QACd,EAAE,EAAC,SAAS;QACZ,YAAY,EAAC,kBAAkB;QAC/B,KAAK,EAAElB,QAAS;QAChB,WAAW,EAAC,qBAAqB;QACjC,QAAQ,EAAGI,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACa,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC3C;IAAA;MAAA;MAAA;MAAA;IAAA,QACC,eACP;MAAA,wBACE;QAAA,UAAI;MAAyB;QAAA;QAAA;QAAA;MAAA,QAAK,eAClC,QAAC,IAAI;QAAC,EAAE,EAAC,SAAS;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GAvDKtB,KAAK;EAAA,QAKQD,WAAW;AAAA;AAAA,KALxBC,KAAK;AAyDX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}